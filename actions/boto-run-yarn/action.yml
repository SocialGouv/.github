#

name: "[Boto] Yarn"

description: "Run action"

outputs:
  BOOL_TRIGGERED:
    description: 'Action result'
    value: ${{ steps.set-result.outputs.result }}

runs:
  using: "composite"

  if: ${{ github.event.issue.pull_request }}

  runs-on: ubuntu-latest

  steps:
    - name: Set up Node.js 14.x
      uses: actions/setup-node@v2-beta
      with:
        node-version: 14.x

    - name: Get upstream commit branch
      id: comment
      run: |
        echo "::set-output name=branch::$( \
            curl \
              -H "Accept: application/vnd.github.sailor-v-preview+json" \
              -u ${{ secrets.GITHUB_TOKEN }} \
              ${{ github.event.issue.pull_request.url }} \
          | jq '.head.ref' \
          | sed 's/\"//g' \
        )"
    - name: Checkout upstream repo
      uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4
      with:
          ref: ${{ steps.comment.outputs.branch }}

    - name: Get yarn cache directory path
      id: init
      shell: bash
      run: |
        echo "::set-output name=yarn_cache::$(yarn cache dir)"
        #
        echo "Node $(node --version)"
        echo "NPM $(npm --version)"
        echo "Npx $(npx --version)"
        echo "Yarn $(yarn --version)"

    - name: Cache Yarn packages
      id: yarn_cache_packages
      uses: actions/cache@v4
      with:
        path: ${{ steps.init.outputs.yarn_cache }}
        key: ${{ runner.os }}-yarn_cache-${{ hashFiles('yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn_cache-
    - name: Cache node_modules
      uses: actions/cache@v4
      with:
        path: |
          node_modules
        key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: Installing
      run: yarn --frozen-lockfile --perfer-offline --link-duplicates

    - name: Run
      run: |
        ${{ needs.Act.outputs.TRAILING_LINE }}

    - name: Status
      run: |
        git status

    - uses: EndBug/add-and-commit@v7
      env:
        HUSKY_SKIP_HOOKS: "true"
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        author_email: ${{ secrets.SOCIALGROOVYBOT_EMAIL }}
        author_name: ${{ secrets.SOCIALGROOVYBOT_NAME }}
        branch: ${{ steps.comment.outputs.branch }}
        message: "chore(:robot:): ${{ needs.Act.outputs.TRAILING_LINE }}"
